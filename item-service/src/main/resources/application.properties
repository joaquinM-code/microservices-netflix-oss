spring.application.name=item-service
server.port= ${PORT:0}

eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#Configuring multiple instances of the same microservice for Ribbon load balancer
#Use java -Dserver.port=9001 -jar product-service-0.0.1-SNAPSHOT.jar in a CLI to start a new instance of the service in a different port
#When we enable Eureka ribbon is not necessary
#product-service.ribbon.listOfServers=http://localhost:8001,http://localhost:9001

#Enable client for Eureka
#https://www.udemy.com/course/microservicios-con-spring-boot-y-spring-cloud/learn/lecture/15372966#questions/10062596
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#Configuring Hystrix default timeout before the fallback method is triggered
#The Hystrix timeout should be bigger than the sum of Ribbon's two lines
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 20000
ribbon.ConnectTimeout: 3000
ribbon.ReadTimeout: 10000
